/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package JobMng_Package;

import AppPackage.AnimationClass;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.*;
import DbConnection.DB;
import HomePage_Package.AdminHome;
import HomePage_Package.MainHome;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Teshan Chathushka
 */
public class JobManagement_Admin extends javax.swing.JFrame {

    /**
     * Creates new form Test2
     */
    int xMouse;//xMouse Global
    int yMouse;//yMouse Global
    int timeRun=0;
    
    SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
    public JobManagement_Admin() {
        initComponents();
        display_job_id();
        setIcon();
        setData();
        setTime();
        loadTable();
        resetTable1Ravindu();
        loadTable1Ravindu();
        resetTable2Ravindu();
        loadTable2Ravindu();
        resetTable3Ravindu();
        loadTable3Ravindu();
        resetTable4Ravindu();
        resetTableEmp();
        loadTable4Ravindu();
        dateviolationravindu();
        FillComboRavindu();   
        loadTableEmp();
         resetTableEmp_name();
        loadTableEmp_name();
        new Thread(){
            public void run(){
                while(timeRun==0)
                {
                    Calendar cal = new GregorianCalendar();
                    
                    int hour = cal.get(Calendar.HOUR);
                    int min = cal.get(Calendar.MINUTE);
                    int sec = cal.get(Calendar.SECOND);
                    int am_pm = cal.get(Calendar.AM_PM);
                    
                    String DayNight="";
                    if(am_pm==1){
                        DayNight="PM";
                    }
                    else{
                        DayNight="AM";
                    }
                    String time=hour+":"+min/*+":"+sec*/;
                    String day_night = DayNight;
                    Clock.setText(time);
                    Am_Pm.setText(day_night);
                }
            }
        }.start();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MMM-dd");
                 String date=sdf.format(new Date());
                 dateLable.setText(date);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SubPanel = new javax.swing.JPanel();
        label_add_appoitnemt = new javax.swing.JLabel();
        label_job_assignment = new javax.swing.JLabel();
        label_job_submission = new javax.swing.JLabel();
        Home = new javax.swing.JLabel();
        SubMenu = new javax.swing.JLabel();
        TitleBar = new javax.swing.JPanel();
        Minimize = new javax.swing.JLabel();
        Cancel = new javax.swing.JLabel();
        Uname_Separator = new javax.swing.JSeparator();
        signOut_button = new javax.swing.JLabel();
        Show_Uname = new javax.swing.JLabel();
        logUserImg = new javax.swing.JLabel();
        DetailPanal = new javax.swing.JPanel();
        ADD_appintment_txt = new javax.swing.JLabel();
        Job_assignmet_txt = new javax.swing.JLabel();
        Request_txt = new javax.swing.JLabel();
        Anime_sub = new javax.swing.JLabel();
        layer = new javax.swing.JLayeredPane();
        panel_appointment = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_HH = new javax.swing.JTextField();
        combo_vehical_type = new javax.swing.JComboBox();
        combo_job_type = new javax.swing.JComboBox();
        btn_appointment_save = new javax.swing.JButton();
        btn_appointment_delete = new javax.swing.JButton();
        date_date = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        txt_MM = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        radio_AM = new javax.swing.JRadioButton();
        radio_PM = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        leble_job_id = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_des = new javax.swing.JTextArea();
        btn_appointment_save1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Customer_Table2 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_appointments = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        txt_reg_no = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        lbl_cid = new javax.swing.JLabel();
        lbl_contact = new javax.swing.JLabel();
        panel_job_assignment = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txt_d_HH = new javax.swing.JTextField();
        txt_d_MM = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txt_st_HH = new javax.swing.JTextField();
        txt_st_MM = new javax.swing.JTextField();
        radio_ST_AM = new javax.swing.JRadioButton();
        radio_ST_PM = new javax.swing.JRadioButton();
        combo_emp = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_avilable_job = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        emp_names_tbl = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        label_jobId = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        label_v_type = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        label_j_type = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        label_date = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        label_HH1 = new javax.swing.JLabel();
        label_MM2 = new javax.swing.JLabel();
        label_MM1 = new javax.swing.JLabel();
        label_am_pm_1 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lbl_reg_no1 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Emp_work_tbl = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        panel_report_generation = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        panel_view_appointment = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        panel_job_submission = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        label_jid2 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        label_eid2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Table3 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl4_show_items = new javax.swing.JTable();
        label_item_id = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        label_item_name = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        label_st_HH = new javax.swing.JLabel();
        label_st_MM = new javax.swing.JLabel();
        label_st_AMPM = new javax.swing.JLabel();
        txt_fn_HH = new javax.swing.JTextField();
        txt_fn_MM = new javax.swing.JTextField();
        radio_am2 = new javax.swing.JRadioButton();
        radio_pm2 = new javax.swing.JRadioButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        des1 = new javax.swing.JTextArea();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        add_to_items_table5 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        ADD_appintment_txt1 = new javax.swing.JLabel();
        View_appointment_txt1 = new javax.swing.JLabel();
        Job_assignmet_txt1 = new javax.swing.JLabel();
        Request_txt1 = new javax.swing.JLabel();
        Report_txt1 = new javax.swing.JLabel();
        TimeLine = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();
        Am_Pm = new javax.swing.JLabel();
        dateLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SubPanel.setBackground(new java.awt.Color(37, 4, 70));
        SubPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_add_appoitnemt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Add-32.png"))); // NOI18N
        label_add_appoitnemt.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_add_appoitnemtMouseMoved(evt);
            }
        });
        label_add_appoitnemt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_add_appoitnemtMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label_add_appoitnemtMouseExited(evt);
            }
        });
        SubPanel.add(label_add_appoitnemt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, 30));

        label_job_assignment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Details-32.png"))); // NOI18N
        label_job_assignment.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_job_assignmentMouseMoved(evt);
            }
        });
        label_job_assignment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_job_assignmentMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label_job_assignmentMouseExited(evt);
            }
        });
        SubPanel.add(label_job_assignment, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        label_job_submission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Check File-32.png"))); // NOI18N
        label_job_submission.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                label_job_submissionMouseMoved(evt);
            }
        });
        label_job_submission.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_job_submissionMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label_job_submissionMouseExited(evt);
            }
        });
        SubPanel.add(label_job_submission, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Home-32.png"))); // NOI18N
        Home.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                HomeMouseMoved(evt);
            }
        });
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeMouseExited(evt);
            }
        });
        SubPanel.add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SubMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Menu-32 (1).png"))); // NOI18N
        SubMenu.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                SubMenuMouseMoved(evt);
            }
        });
        SubMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SubMenuMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SubMenuMouseExited(evt);
            }
        });
        SubPanel.add(SubMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 124, -1, -1));

        getContentPane().add(SubPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 50, 670));

        TitleBar.setBackground(new java.awt.Color(255, 255, 255));
        TitleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TitleBarMouseDragged(evt);
            }
        });
        TitleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TitleBarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TitleBarMousePressed(evt);
            }
        });
        TitleBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Minimize Window-32 (1).png"))); // NOI18N
        Minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Minimize.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                MinimizeMouseMoved(evt);
            }
        });
        Minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimizeMouseExited(evt);
            }
        });
        TitleBar.add(Minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1013, 11, -1, 30));

        Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Cancel-32.png"))); // NOI18N
        Cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cancel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                CancelMouseMoved(evt);
            }
        });
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CancelMouseExited(evt);
            }
        });
        TitleBar.add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1061, 11, -1, 30));
        TitleBar.add(Uname_Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 70, 10));

        signOut_button.setBackground(new java.awt.Color(204, 204, 204));
        signOut_button.setForeground(new java.awt.Color(51, 0, 0));
        signOut_button.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signOut_button.setText("SignOut");
        signOut_button.setToolTipText("SignOut");
        signOut_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signOut_button.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                signOut_buttonMouseMoved(evt);
            }
        });
        signOut_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signOut_buttonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signOut_buttonMouseExited(evt);
            }
        });
        TitleBar.add(signOut_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 70, 40));

        Show_Uname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Show_Uname.setText("Admin");
        Show_Uname.setToolTipText("User Type");
        TitleBar.add(Show_Uname, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 70, 40));

        logUserImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-Male User-32 (dark).png"))); // NOI18N
        logUserImg.setToolTipText("User Info");
        logUserImg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                logUserImgMouseMoved(evt);
            }
        });
        logUserImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logUserImgMouseExited(evt);
            }
        });
        TitleBar.add(logUserImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 30));

        getContentPane().add(TitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 1110, -1));

        DetailPanal.setBackground(new java.awt.Color(204, 204, 255));
        DetailPanal.setPreferredSize(new java.awt.Dimension(1110, 330));
        DetailPanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ADD_appintment_txt.setBackground(new java.awt.Color(37, 4, 70));
        ADD_appintment_txt.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        ADD_appintment_txt.setForeground(new java.awt.Color(255, 255, 255));
        ADD_appintment_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ADD_appintment_txt.setText("Add Appointments");
        ADD_appintment_txt.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ADD_appintment_txtMouseMoved(evt);
            }
        });
        ADD_appintment_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADD_appintment_txtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADD_appintment_txtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADD_appintment_txtMouseExited(evt);
            }
        });
        DetailPanal.add(ADD_appintment_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 40, 190, 40));

        Job_assignmet_txt.setBackground(new java.awt.Color(37, 4, 70));
        Job_assignmet_txt.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        Job_assignmet_txt.setForeground(new java.awt.Color(255, 255, 255));
        Job_assignmet_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Job_assignmet_txt.setText("Job Assignment");
        Job_assignmet_txt.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Job_assignmet_txtMouseMoved(evt);
            }
        });
        Job_assignmet_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Job_assignmet_txtMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Job_assignmet_txtMouseExited(evt);
            }
        });
        DetailPanal.add(Job_assignmet_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 90, 190, 40));

        Request_txt.setBackground(new java.awt.Color(37, 4, 70));
        Request_txt.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        Request_txt.setForeground(new java.awt.Color(255, 255, 255));
        Request_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Request_txt.setText("Job Submission");
        Request_txt.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Request_txtMouseMoved(evt);
            }
        });
        Request_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Request_txtMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Request_txtMouseExited(evt);
            }
        });
        DetailPanal.add(Request_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 140, 190, 40));

        Anime_sub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sb menu.png"))); // NOI18N
        DetailPanal.add(Anime_sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 0, 190, 200));

        layer.setLayout(new java.awt.CardLayout());

        jLabel2.setText("Vehical Type");

        jLabel3.setText("Job Type");

        jLabel4.setText("custormer ID");

        jLabel5.setText("customer Name");

        jLabel6.setText("customer Contact");

        jLabel7.setText("Date");

        jLabel8.setText("Time");

        txt_HH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_HHKeyTyped(evt);
            }
        });

        combo_vehical_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Vehicle Type", "Motor Cycle", "Three wheeler", "Car", "Van", "Lorry", "Bus", "Tractor" }));

        combo_job_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select job Type", "Patch", "Wheel Alignment", "Alloy Wheels", "Battery" }));

        btn_appointment_save.setText("Save");
        btn_appointment_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_appointment_saveActionPerformed(evt);
            }
        });

        btn_appointment_delete.setText("Delete");
        btn_appointment_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_appointment_deleteActionPerformed(evt);
            }
        });

        jLabel13.setText("HH");

        txt_MM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MMKeyTyped(evt);
            }
        });

        jLabel14.setText("MM");

        radio_AM.setText("AM");
        radio_AM.setContentAreaFilled(false);
        radio_AM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_AMActionPerformed(evt);
            }
        });

        radio_PM.setText("PM");
        radio_PM.setContentAreaFilled(false);
        radio_PM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_PMActionPerformed(evt);
            }
        });

        jLabel10.setText("Job ID");

        leble_job_id.setText("jid");

        jLabel9.setText("Job description");

        txt_des.setColumns(20);
        txt_des.setRows(5);
        jScrollPane2.setViewportView(txt_des);

        btn_appointment_save1.setText("Clear all");
        btn_appointment_save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_appointment_save1ActionPerformed(evt);
            }
        });

        Customer_Table2.setAutoCreateRowSorter(true);
        Customer_Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Contact"
            }
        ));
        Customer_Table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Customer_Table2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(Customer_Table2);

        jLabel21.setText("Customer Details Table");

        jLabel22.setText("Appointment Table");

        tbl_appointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "job ID", "cus ID", "Name", "Contact", "regNo", "Vehicle", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_appointments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_appointmentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_appointments);

        jLabel35.setText("Vehicle Reg.No");

        txt_reg_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_reg_noActionPerformed(evt);
            }
        });

        lbl_name.setText("name");

        lbl_cid.setText("cus_id");

        lbl_contact.setText("contact");

        javax.swing.GroupLayout panel_appointmentLayout = new javax.swing.GroupLayout(panel_appointment);
        panel_appointment.setLayout(panel_appointmentLayout);
        panel_appointmentLayout.setHorizontalGroup(
            panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_appointmentLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_appointmentLayout.createSequentialGroup()
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel35)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10))
                        .addGap(71, 71, 71))
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(137, 137, 137)))
                .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_appointmentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_cid, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leble_job_id, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_appointmentLayout.createSequentialGroup()
                                .addComponent(txt_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(txt_MM, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(radio_AM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radio_PM))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_job_type, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_vehical_type, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_reg_no, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addComponent(btn_appointment_save1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(btn_appointment_save)
                        .addGap(36, 36, 36)
                        .addComponent(btn_appointment_delete)
                        .addGap(321, 321, 321))
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addContainerGap())
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_appointmentLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                        .addGap(89, 89, 89))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)))
        );
        panel_appointmentLayout.setVerticalGroup(
            panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_appointmentLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel10))
                    .addComponent(leble_job_id, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panel_appointmentLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_appointmentLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(0, 104, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_appointment_save)
                            .addComponent(btn_appointment_delete)
                            .addComponent(btn_appointment_save1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_appointmentLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbl_cid, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(lbl_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(txt_reg_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(combo_vehical_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(combo_job_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(date_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radio_AM)
                                .addComponent(radio_PM))
                            .addGroup(panel_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_HH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)
                                .addComponent(txt_MM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(jLabel8)))
                        .addGap(77, 77, 77))))
        );

        layer.add(panel_appointment, "card2");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel19.setText("Duration");

        txt_d_HH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_d_HHActionPerformed(evt);
            }
        });

        txt_d_MM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_d_MMActionPerformed(evt);
            }
        });

        jLabel18.setText("Choose Employee ");

        jButton2.setText("Assign");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel23.setText("Start Time");

        txt_st_HH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_st_HHActionPerformed(evt);
            }
        });

        txt_st_MM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_st_MMActionPerformed(evt);
            }
        });

        radio_ST_AM.setText("AM");
        radio_ST_AM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_ST_AMActionPerformed(evt);
            }
        });

        radio_ST_PM.setText("PM");

        combo_emp.setEditable(true);
        combo_emp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select an Employee" }));
        combo_emp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                combo_empMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_st_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_st_MM, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radio_ST_AM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radio_ST_PM))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(20, 20, 20)
                                .addComponent(txt_d_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_d_MM, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combo_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButton2)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txt_st_HH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_st_MM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radio_ST_AM)
                    .addComponent(radio_ST_PM))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_d_HH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_d_MM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addGap(43, 43, 43))
        );

        tbl_avilable_job.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "JobId", "JobType", "Vehicle", "Date", "Appointment time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_avilable_job.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_avilable_jobMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_avilable_job);

        emp_names_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "EmpID", "Emp Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(emp_names_tbl);
        if (emp_names_tbl.getColumnModel().getColumnCount() > 0) {
            emp_names_tbl.getColumnModel().getColumn(0).setResizable(false);
            emp_names_tbl.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setForeground(new java.awt.Color(255, 51, 153));

        jLabel17.setText("Job ID               :");

        label_jobId.setText("0");

        jLabel26.setText("Vehicle Type      :");

        label_v_type.setText("vehicle Type");

        jLabel29.setText("Job Type            :");

        label_j_type.setText("job Type");

        jLabel20.setText("Date                   :");

        label_date.setText("date");

        jLabel27.setText("Time Of Appointment :");

        label_HH1.setText("Hrs");

        label_MM2.setText(":");

        label_MM1.setText("mins");

        jLabel36.setText("Vehicle Reg. No :");

        lbl_reg_no1.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_j_type, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_v_type, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(label_jobId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_reg_no1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(label_HH1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label_MM2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(label_date)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_MM1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_am_pm_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_jobId, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(lbl_reg_no1))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(label_v_type, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(label_j_type, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(label_date, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_MM1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_HH1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27)
                        .addComponent(label_MM2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_am_pm_1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        Emp_work_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Emp name", "Job Id", "Job type", "Start time", "Finishtime"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(Emp_work_tbl);
        if (Emp_work_tbl.getColumnModel().getColumnCount() > 0) {
            Emp_work_tbl.getColumnModel().getColumn(0).setResizable(false);
            Emp_work_tbl.getColumnModel().getColumn(1).setResizable(false);
            Emp_work_tbl.getColumnModel().getColumn(2).setResizable(false);
            Emp_work_tbl.getColumnModel().getColumn(3).setResizable(false);
            Emp_work_tbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel24.setText("Select Job");

        javax.swing.GroupLayout panel_job_assignmentLayout = new javax.swing.GroupLayout(panel_job_assignment);
        panel_job_assignment.setLayout(panel_job_assignmentLayout);
        panel_job_assignmentLayout.setHorizontalGroup(
            panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_assignmentLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_assignmentLayout.createSequentialGroup()
                        .addGroup(panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_job_assignmentLayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_assignmentLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_assignmentLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(479, 479, 479))))
        );
        panel_job_assignmentLayout.setVerticalGroup(
            panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_job_assignmentLayout.createSequentialGroup()
                .addGroup(panel_job_assignmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_job_assignmentLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_job_assignmentLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(526, 526, 526))
        );

        layer.add(panel_job_assignment, "card3");

        jLabel12.setText("report generation");

        javax.swing.GroupLayout panel_report_generationLayout = new javax.swing.GroupLayout(panel_report_generation);
        panel_report_generation.setLayout(panel_report_generationLayout);
        panel_report_generationLayout.setHorizontalGroup(
            panel_report_generationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_report_generationLayout.createSequentialGroup()
                .addGap(489, 489, 489)
                .addComponent(jLabel12)
                .addContainerGap(537, Short.MAX_VALUE))
        );
        panel_report_generationLayout.setVerticalGroup(
            panel_report_generationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_report_generationLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jLabel12)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        layer.add(panel_report_generation, "card4");

        jLabel15.setText("view appointment");

        javax.swing.GroupLayout panel_view_appointmentLayout = new javax.swing.GroupLayout(panel_view_appointment);
        panel_view_appointment.setLayout(panel_view_appointmentLayout);
        panel_view_appointmentLayout.setHorizontalGroup(
            panel_view_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_view_appointmentLayout.createSequentialGroup()
                .addGap(522, 522, 522)
                .addComponent(jLabel15)
                .addContainerGap(503, Short.MAX_VALUE))
        );
        panel_view_appointmentLayout.setVerticalGroup(
            panel_view_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_view_appointmentLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jLabel15)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        layer.add(panel_view_appointment, "card5");

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel25.setText("Job ID:");

        jLabel28.setText("Employee ID:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel28))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(label_jid2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(label_eid2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_jid2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(label_eid2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        Table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Job ID", "employee ID"
            }
        ));
        Table3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table3MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(Table3);

        tbl4_show_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ItemID", "Item Name"
            }
        ));
        tbl4_show_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl4_show_itemsMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tbl4_show_items);

        label_item_id.setText("0");

        jLabel34.setText("Item Name:");

        label_item_name.setText("Item Name:");

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));

        txt_fn_MM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fn_MMActionPerformed(evt);
            }
        });

        radio_am2.setText("AM");

        radio_pm2.setText("PM");
        radio_pm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_pm2ActionPerformed(evt);
            }
        });

        jLabel32.setText("Finish time");

        jLabel33.setText("Start Time");

        des1.setColumns(20);
        des1.setRows(5);
        jScrollPane9.setViewportView(des1);

        jLabel30.setText("Description");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(23, 23, 23))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_fn_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txt_fn_MM, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radio_am2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radio_pm2))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(label_st_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_st_MM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_st_AMPM, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_st_HH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_st_MM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_st_AMPM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(txt_fn_HH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_fn_MM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radio_am2)
                    .addComponent(radio_pm2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addContainerGap())
        );

        add_to_items_table5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ItemID", "Item Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        add_to_items_table5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_to_items_table5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_to_items_table5MouseEntered(evt);
            }
        });
        jScrollPane8.setViewportView(add_to_items_table5);

        jButton3.setText("Add Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel31.setText("ItemID :");

        jButton4.setText("Submit job");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_job_submissionLayout = new javax.swing.GroupLayout(panel_job_submission);
        panel_job_submission.setLayout(panel_job_submissionLayout);
        panel_job_submissionLayout.setHorizontalGroup(
            panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_job_submissionLayout.createSequentialGroup()
                .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_job_submissionLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_job_submissionLayout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_item_name))
                            .addGroup(panel_job_submissionLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_item_id))
                            .addGroup(panel_job_submissionLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(panel_job_submissionLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        panel_job_submissionLayout.setVerticalGroup(
            panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_submissionLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_job_submissionLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_submissionLayout.createSequentialGroup()
                                .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(label_item_id)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panel_job_submissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel34)
                                    .addComponent(label_item_name))
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(88, 88, 88))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_submissionLayout.createSequentialGroup()
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_submissionLayout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))))
                    .addGroup(panel_job_submissionLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_job_submissionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );

        layer.add(panel_job_submission, "card6");

        DetailPanal.add(layer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 520));

        ADD_appintment_txt1.setBackground(new java.awt.Color(37, 4, 70));
        ADD_appintment_txt1.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        ADD_appintment_txt1.setForeground(new java.awt.Color(255, 255, 255));
        ADD_appintment_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ADD_appintment_txt1.setText("Add Appointments");
        ADD_appintment_txt1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ADD_appintment_txt1MouseMoved(evt);
            }
        });
        ADD_appintment_txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADD_appintment_txt1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADD_appintment_txt1MouseExited(evt);
            }
        });
        DetailPanal.add(ADD_appintment_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, 40));

        View_appointment_txt1.setBackground(new java.awt.Color(37, 4, 70));
        View_appointment_txt1.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        View_appointment_txt1.setForeground(new java.awt.Color(255, 255, 255));
        View_appointment_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        View_appointment_txt1.setText("View Appointment");
        View_appointment_txt1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                View_appointment_txt1MouseMoved(evt);
            }
        });
        View_appointment_txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                View_appointment_txt1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                View_appointment_txt1MouseExited(evt);
            }
        });
        DetailPanal.add(View_appointment_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 190, 40));

        Job_assignmet_txt1.setBackground(new java.awt.Color(37, 4, 70));
        Job_assignmet_txt1.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        Job_assignmet_txt1.setForeground(new java.awt.Color(255, 255, 255));
        Job_assignmet_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Job_assignmet_txt1.setText("Job Assignment");
        Job_assignmet_txt1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Job_assignmet_txt1MouseMoved(evt);
            }
        });
        Job_assignmet_txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Job_assignmet_txt1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Job_assignmet_txt1MouseExited(evt);
            }
        });
        DetailPanal.add(Job_assignmet_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 190, 40));

        Request_txt1.setBackground(new java.awt.Color(37, 4, 70));
        Request_txt1.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        Request_txt1.setForeground(new java.awt.Color(255, 255, 255));
        Request_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Request_txt1.setText("Job Submission");
        Request_txt1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Request_txt1MouseMoved(evt);
            }
        });
        Request_txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Request_txt1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Request_txt1MouseExited(evt);
            }
        });
        DetailPanal.add(Request_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 190, 40));

        Report_txt1.setBackground(new java.awt.Color(37, 4, 70));
        Report_txt1.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        Report_txt1.setForeground(new java.awt.Color(255, 255, 255));
        Report_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Report_txt1.setText("Report Generation");
        Report_txt1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Report_txt1MouseMoved(evt);
            }
        });
        Report_txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Report_txt1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Report_txt1MouseExited(evt);
            }
        });
        DetailPanal.add(Report_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 190, 40));

        getContentPane().add(DetailPanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 153, 1110, 510));

        TimeLine.setBackground(new java.awt.Color(204, 204, 204));
        TimeLine.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SLogo.png"))); // NOI18N
        logo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoMouseClicked(evt);
            }
        });
        TimeLine.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 100, 120));

        Clock.setFont(new java.awt.Font("Digital-7 Mono", 0, 48)); // NOI18N
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Clock.setText("00:00");
        Clock.setToolTipText("");
        TimeLine.add(Clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(917, 11, 128, 53));

        Am_Pm.setFont(new java.awt.Font("Digital-7 Mono", 0, 24)); // NOI18N
        Am_Pm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Am_Pm.setToolTipText("");
        TimeLine.add(Am_Pm, new org.netbeans.lib.awtextra.AbsoluteConstraints(1045, 21, 26, 43));

        dateLable.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        dateLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLable.setText("00 00 0000");
        TimeLine.add(dateLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(878, 70, 212, 38));

        getContentPane().add(TimeLine, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 44, 1110, 120));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TitleBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TitleBarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TitleBarMouseClicked

    private void TitleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TitleBarMouseDragged
       //mouse dragged even and create mouse x & y axie
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_TitleBarMouseDragged

    private void TitleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TitleBarMousePressed
        //Jframe pressed and dragged Ivent
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_TitleBarMousePressed

    private void MinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeMouseClicked
        this.setState(JFrame.ICONIFIED); // minimize Button Mouse click event
        
    }//GEN-LAST:event_MinimizeMouseClicked

    private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
       //Close Button mouse click event
        int dialog = JOptionPane.YES_NO_OPTION;
        int result = JOptionPane.showConfirmDialog(null, "Do you want to exit", "Exit",dialog);
        if(result == 0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_CancelMouseClicked

    private void MinimizeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeMouseMoved
        Minimize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));
    }//GEN-LAST:event_MinimizeMouseMoved

    private void MinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeMouseExited
       Minimize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
    }//GEN-LAST:event_MinimizeMouseExited

    private void CancelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseMoved
        Cancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
    }//GEN-LAST:event_CancelMouseMoved

    private void CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseExited
        Cancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
    }//GEN-LAST:event_CancelMouseExited

    private void HomeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseMoved
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_HomeMouseMoved

    private void HomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseExited
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_HomeMouseExited

    private void SubMenuMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubMenuMouseMoved
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_SubMenuMouseMoved

    private void SubMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubMenuMouseExited
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_SubMenuMouseExited

    private void label_add_appoitnemtMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_add_appoitnemtMouseMoved
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_label_add_appoitnemtMouseMoved

    private void label_add_appoitnemtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_add_appoitnemtMouseExited
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_label_add_appoitnemtMouseExited

    private void label_job_assignmentMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_assignmentMouseMoved
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,7
        
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_label_job_assignmentMouseMoved

    private void label_job_assignmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_assignmentMouseExited
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_label_job_assignmentMouseExited

    //Sub Menu Animation Movement
    private void SubMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubMenuMouseClicked
        //  --------->>>
        AnimationClass sub1 = new AnimationClass();
        sub1.jLabelXRight(-190, 0, 10, 5, Anime_sub);
        // <<<----------
        AnimationClass sub2 = new AnimationClass();
        sub2.jLabelXLeft(0, -190, 10, 5, Anime_sub);
        //---------------------------------------------
        
        //  --------->>>
        AnimationClass AddRemove1 = new AnimationClass();
        AddRemove1.jLabelXRight(-190, 0, 10, 5, ADD_appintment_txt);
        // <<<----------
        AnimationClass AddRemove2 = new AnimationClass();
        AddRemove2.jLabelXLeft(0, -190, 10, 5, ADD_appintment_txt);
        //---------------------------------------------
        
        //  --------->>>
        AnimationClass EDetails1 = new AnimationClass();
        EDetails1.jLabelXRight(-190, 0, 10, 5, Job_assignmet_txt);
        // <<<----------
        AnimationClass EDetails2 = new AnimationClass();
        EDetails2.jLabelXLeft(0, -190, 10, 5, Job_assignmet_txt);
        //---------------------------------------------
        
        //  --------->>>
        AnimationClass Request1 = new AnimationClass();
        Request1.jLabelXRight(-190, 0, 10, 5, Request_txt);
        // <<<----------
        AnimationClass Request2 = new AnimationClass();
        Request2.jLabelXLeft(0, -190, 10, 5, Request_txt);
        //---------------------------------------------
        
        
    }//GEN-LAST:event_SubMenuMouseClicked

    private void ADD_appintment_txtMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txtMouseMoved
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        
    }//GEN-LAST:event_ADD_appintment_txtMouseMoved

    private void ADD_appintment_txtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txtMouseExited
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_ADD_appintment_txtMouseExited

    private void Job_assignmet_txtMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txtMouseMoved
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_Job_assignmet_txtMouseMoved

    private void Job_assignmet_txtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txtMouseExited
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_Job_assignmet_txtMouseExited

    private void ADD_appintment_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txtMouseClicked

     //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_appointment);
        layer.repaint();
        layer.revalidate();        
    }//GEN-LAST:event_ADD_appintment_txtMouseClicked

    private void label_add_appoitnemtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_add_appoitnemtMouseClicked
        //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_appointment);
        layer.repaint();
        layer.revalidate();   
    }//GEN-LAST:event_label_add_appoitnemtMouseClicked

    private void label_job_assignmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_assignmentMouseClicked
        //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_job_assignment);
        layer.repaint();
        layer.revalidate();   
        
    }//GEN-LAST:event_label_job_assignmentMouseClicked

    private void logoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoMouseClicked
//        Add_remove_panel.setVisible(false);
//        Attend_panal.setVisible(false);
//        Emp_detail_panel.setVisible(false);
//        Request_panel.setVisible(false);
//        Report_panel.setVisible(false);
    }//GEN-LAST:event_logoMouseClicked

    private void Job_assignmet_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txtMouseClicked

        //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_job_assignment);
        layer.repaint();
        layer.revalidate();
    }//GEN-LAST:event_Job_assignmet_txtMouseClicked

    private void Request_txtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txtMouseExited
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_Request_txtMouseExited

    private void Request_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txtMouseClicked
        //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_job_submission);
        layer.repaint();
        layer.revalidate();

    }//GEN-LAST:event_Request_txtMouseClicked

    private void Request_txtMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txtMouseMoved
        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));

        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70

        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_Request_txtMouseMoved

    private void label_job_submissionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_submissionMouseExited
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_label_job_submissionMouseExited

    private void label_job_submissionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_submissionMouseClicked
        //remove all stuff
        layer.removeAll();
        layer.repaint();
        layer.revalidate();
        
        //add stuff
        layer.add(panel_job_submission);
        layer.repaint();
        layer.revalidate();   

    }//GEN-LAST:event_label_job_submissionMouseClicked

    private void label_job_submissionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_job_submissionMouseMoved
        label_job_submission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70

        Home.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        SubMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        label_add_appoitnemt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        label_job_assignment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        

        ADD_appintment_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
        Job_assignmet_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        
    }//GEN-LAST:event_label_job_submissionMouseMoved

    private void btn_appointment_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_appointment_saveActionPerformed
       
        
       if((lbl_cid.getText().trim().isEmpty())||(lbl_name.getText().trim().isEmpty())||(lbl_contact.getText().trim().isEmpty())||(txt_reg_no.getText().trim().isEmpty())||(txt_HH.getText().trim().isEmpty())||(txt_MM.getText().trim().isEmpty())||combo_vehical_type.getSelectedItem()=="Select Vehicle Type"||combo_job_type.getSelectedItem()== "Select Job Type"){
                                  String fill="Fill in all the fields to continue";
                                  JOptionPane.showMessageDialog(null,fill);
                                  return;
        } 
       
       //Validate Name
        if(validateName(lbl_name.getText()))
           {
               String fill="Customer Name can contain Only Letters";
               JOptionPane.showMessageDialog(null,fill);
           }
           
          //validate TP No
           
            /*if(validateTP(lbl_contact.getText()))
           {
           String fill="Recheck Your Contact Number";
               JOptionPane.showMessageDialog(null,fill);
           }
      
       
            else */ { 
                  
        
        DB db = new DB();
        short flag = 0;
        short flagCus = 0;
        
        String sql = "select id from job_details";// need to be change
        String sql_cus = "select CusId from customer";
        ResultSet rs;
        try {
            
            rs = db.getData(sql);
            while(rs.next()) {
                String jid = rs.getString(1);
                if(jid.equals(leble_job_id.getText())) {
                    flag = 1; // update
                    break;
                }
            }
            rs = db.getData(sql_cus);
            while(rs.next()) {
                String cid = rs.getString(1);
                if(cid.equals(lbl_cid.getText())) {
                    flagCus = 1; // update
                    break;
                }
            }
            
            System.out.println(flag);
            System.out.println(flagCus);
            
            if(timeValidation() == 1) {
                if(flag == 1 && flagCus == 1) // When Both the customer ID and JobId are existing 
                {
                updateData(); // ubdate data for existing jobs
                resetTable(); 
                loadTable(); //get data to the table from database
                resetTable1Ravindu();
                loadTable1Ravindu();
                resetTable2Ravindu();
                loadTable2Ravindu();
              //  loadTable3Ravindu();
              //  loadTable4Ravindu();
              //  loadTable5Ravindu();
                loadTableEmp();
                setClear(); // setting the text boxes empty
                }
                
                else if(flag==0 && flagCus==1) // When the customer is existing and job ID is new
                {
                    updateData1();
                    resetTable(); 
                    loadTable(); 
                    resetTable1Ravindu();
                    loadTable1Ravindu();
                    resetTable2Ravindu();
                    loadTable2Ravindu();
                 //   loadTable3Ravindu();
                 //   loadTable4Ravindu();
                 //   loadTable5Ravindu();
                    loadTableEmp();
                
                }    
                
                
                else {
                    insertData(); // insert new data
                    resetTable();
                    loadTable();
                    resetTable1Ravindu();
                    loadTable1Ravindu();
                    resetTable2Ravindu();
                    loadTable2Ravindu();
                 //   loadTable3Ravindu();
                 //   loadTable4Ravindu();
                 //   loadTable5Ravindu();
                    setClear();
                }
            }else{
                JOptionPane.showMessageDialog(null, "Invalid Time!!!");
                setTime();
            }
            
            
            
            
        } catch (Exception ex) {
            System.out.println("btnsAVE " + ex);
        }

    }//GEN-LAST:event_btn_appointment_saveActionPerformed
    }
    private void btn_appointment_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_appointment_deleteActionPerformed
        DB db = new DB();
        int i = tbl_appointments.getSelectedRow();
        int jobId = Integer.parseInt(tbl_appointments.getValueAt(i, 0).toString());
        int cusId = Integer.parseInt(tbl_appointments.getValueAt(i, 1).toString());
        
        String sql1 = "delete from a where jid = "+jobId+"";
        String sql2 = "delete from job_details where id = "+jobId+"";
        String sql4= "delete from appoint_tbl where jid = "+jobId+"";
        String sql5= "delete from final_job_table where jid = "+jobId+"";
       // String sql3= "delete from cus_details where id = "+cusId+"";
        
        
        try {
            boolean ok1 = db.putData(sql1);
            boolean ok2 = db.putData(sql2);
        //    boolean ok3 = db.putData(sql3);
            boolean ok4 = db.putData(sql4);
            boolean ok5 = db.putData(sql5);
            
            if(ok1 && ok2 && ok4 && ok5)
                JOptionPane.showMessageDialog(null, "Data Deleted Successfully!!!");
         
            resetTable();
            loadTable();
            resetTable1Ravindu();
            loadTable1Ravindu();
            resetTable2Ravindu();
            loadTable2Ravindu();
            resetTable3Ravindu();
            loadTable3Ravindu();
            resetTable4Ravindu();
            loadTable4Ravindu();
            loadTableEmp();
            
            setClear();
            
            
        } catch (Exception ex) {
            System.out.println("btn_appointment_deleteActionPerformed " + ex);
        }
    }//GEN-LAST:event_btn_appointment_deleteActionPerformed

    private void tbl_appointmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_appointmentsMouseClicked
        DB db = new DB();
        ButtonGroup bg = new ButtonGroup();
        bg.add(radio_AM);
        bg.add(radio_PM);
        
        int i = tbl_appointments.getSelectedRow();
        int jobId = Integer.parseInt(tbl_appointments.getValueAt(i, 0).toString());

        String sql = "select * from job_details INNER JOIN a on job_details.id=a.jid INNER JOIN customer ON customer.CusId=a.cid where job_details.id = '"+jobId+"'";
        try {
            ResultSet rs = db.getData(sql);
            while(rs.next()) {
               /* leble_job_id.setText(rs.getString(9));
                txt_cus_id.setText(rs.getString(10));
                txt_cus_name.setText(rs.getString(12));
                txt_cus_contact.setText(rs.getString(13));
                combo_vehical_type.setSelectedItem(rs.getString(2));
                combo_job_type.setSelectedItem(rs.getString(3));
                txt_des.setText(rs.getString(4));
                Date date = dt.parse(rs.getString(5));
                date_date.setDate(date);
                txt_HH.setText(rs.getString(6));
                txt_MM.setText(rs.getString(7));
                if("AM".equals(rs.getString(8))) {
                    radio_AM.setSelected(true);
                    radio_PM.setSelected(false);  */
                txt_reg_no.setText(rs.getString(3));
                leble_job_id.setText(rs.getString(10));
                lbl_cid.setText(rs.getString(12));
                lbl_name.setText(rs.getString(13));
                lbl_contact.setText(rs.getString(15));
                combo_vehical_type.setSelectedItem(rs.getString(2));
                combo_job_type.setSelectedItem(rs.getString(4));
                txt_des.setText(rs.getString(5));
                Date date = dt.parse(rs.getString(6));
                date_date.setDate(date);
                txt_HH.setText(rs.getString(7));
                txt_MM.setText(rs.getString(8));
                if("AM".equals(rs.getString(9))) {
                    radio_AM.setSelected(true);
                    radio_PM.setSelected(false);
                
                
                
                
                }
                else{
                    radio_PM.setSelected(true);
                    radio_AM.setSelected(false);
                }
            }

        } catch (Exception ex) {
            System.out.println("table mouse clicked   " + ex);
        }
    }//GEN-LAST:event_tbl_appointmentsMouseClicked

    private void ADD_appintment_txt1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txt1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_ADD_appintment_txt1MouseMoved

    private void ADD_appintment_txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ADD_appintment_txt1MouseClicked

    private void ADD_appintment_txt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txt1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_ADD_appintment_txt1MouseExited

    private void View_appointment_txt1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_View_appointment_txt1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_View_appointment_txt1MouseMoved

    private void View_appointment_txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_View_appointment_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_View_appointment_txt1MouseClicked

    private void View_appointment_txt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_View_appointment_txt1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_View_appointment_txt1MouseExited

    private void Job_assignmet_txt1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txt1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Job_assignmet_txt1MouseMoved

    private void Job_assignmet_txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Job_assignmet_txt1MouseClicked

    private void Job_assignmet_txt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Job_assignmet_txt1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Job_assignmet_txt1MouseExited

    private void Request_txt1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txt1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Request_txt1MouseMoved

    private void Request_txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Request_txt1MouseClicked

    private void Request_txt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Request_txt1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Request_txt1MouseExited

    private void Report_txt1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Report_txt1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Report_txt1MouseMoved

    private void Report_txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Report_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Report_txt1MouseClicked

    private void Report_txt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Report_txt1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Report_txt1MouseExited

    private void btn_appointment_save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_appointment_save1ActionPerformed
        // TODO add your handling code here:
        
       setClear();
    }//GEN-LAST:event_btn_appointment_save1ActionPerformed

    private void txt_d_HHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_d_HHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_d_HHActionPerformed

    private void tbl_avilable_jobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_avilable_jobMouseClicked

        // TODO add your handling code here:
      DB db = new DB();
      
      ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radio_ST_AM);
        bg1.add(radio_ST_PM);
     
     /* ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radio_AM);
        bg1.add(radio_PM);
        */
        
        int i = tbl_avilable_job.getSelectedRow();
        int jobId = Integer.parseInt(tbl_avilable_job.getValueAt(i, 0).toString());

        String sql = "select * from appoint_tbl where jid = '"+jobId+"'";
        try {
            ResultSet rs = db.getData(sql);
            while(rs.next()) {
                label_jobId.setText(rs.getString(1));
          //      txt_cus_id.setText(rs.getString(10));
          //      txt_cus_name.setText(rs.getString(12));
           //     txt_cus_contact.setText(rs.getString(13));
                label_v_type.setText(rs.getString(6));
                label_j_type.setText(rs.getString(7));
               lbl_reg_no1.setText(rs.getString(5));
                label_date.setText(rs.getString(8));
                label_HH1.setText(rs.getString(9));
                txt_st_HH.setText(rs.getString(9));
                 label_MM1.setText(rs.getString(10));
                 txt_st_MM.setText(rs.getString(10));
                label_am_pm_1.setText(rs.getString(11));
                if("AM".equals(rs.getString(11))) {
                    radio_ST_AM.setSelected(true);
                    radio_ST_PM.setSelected(false);
                }
                else{
                    radio_ST_PM.setSelected(true);
                    radio_ST_AM.setSelected(false);
                }
                 
            }

        } catch (Exception ex) {
            System.out.println("table mouse clicked   " + ex);
        }
    }//GEN-LAST:event_tbl_avilable_jobMouseClicked

    private void txt_d_MMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_d_MMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_d_MMActionPerformed

    private void Customer_Table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Customer_Table2MouseClicked
        // TODO add your handling code here:
        
        DB db = new DB();
     
     /* ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radio_AM);
        bg1.add(radio_PM);
        */
        
        int i = Customer_Table2.getSelectedRow();
        int cusId = Integer.parseInt(Customer_Table2.getValueAt(i, 0).toString());

        String sql = "select * from customer where CusId = '"+cusId+"'";
        try {
            ResultSet rs = db.getData(sql);
            while(rs.next()) {
            //    label_jid1.setText(rs.getString(1));
                lbl_cid.setText(rs.getString(1));
                lbl_name.setText(rs.getString(2));
                lbl_contact.setText(rs.getString(4));
       /*         label_Vehicle1.setText(rs.getString(2));
                label_job1.setText(rs.getString(3));
          //      txt_des.setText(rs.getString(4));
                label_date1.setText(rs.getString(5));
                label_HH1.setText(rs.getString(6));
                label_MM1.setText(rs.getString(7));
                label_am_pm_1.setText(rs.getString(8)); */
                 
            }

        } catch (Exception ex) {
            System.out.println("table2 mouse clicked   " + ex);
        }
    }//GEN-LAST:event_Customer_Table2MouseClicked

    private void radio_PMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_PMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_PMActionPerformed

    private void radio_AMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_AMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_AMActionPerformed

    private void txt_st_HHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_st_HHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_st_HHActionPerformed

    private void txt_st_MMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_st_MMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_st_MMActionPerformed

    private void radio_ST_AMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_ST_AMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_ST_AMActionPerformed

    private void radio_pm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_pm2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_pm2ActionPerformed

    private void Table3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table3MouseClicked
        // TODO add your handling code here:
            DB db = new DB();
     
      ButtonGroup bg2 = new ButtonGroup();
        bg2.add(radio_am2);
        bg2.add(radio_pm2);
        
        
        int i = Table3.getSelectedRow();
        int jobId = Integer.parseInt(Table3.getValueAt(i, 0).toString());

        String sql = "select * from set_job where jid = '"+jobId+"'";
        try {
            ResultSet rs = db.getData(sql);
            while(rs.next()) {
                label_jid2.setText(rs.getString(1));
                label_eid2.setText(rs.getString(2));
           
          //      txt_des.setText(rs.getString(4));
               // label_date.setText(rs.getString(7));
                
                
                label_st_HH.setText(rs.getString(3));
                label_st_MM.setText(rs.getString(4));
                label_st_AMPM.setText(rs.getString(5));
                txt_fn_HH.setText(rs.getString(8));
                txt_fn_MM.setText(rs.getString(9));
                if("AM".equals(rs.getString(10))) {
                    radio_am2.setSelected(true);
                    radio_pm2.setSelected(false);
                }
                else{
                    radio_pm2.setSelected(true);
                    radio_am2.setSelected(false);
          //       txt_st_MM.setText(rs.getString(9));
           //     label_am_pm_1.setText(rs.getString(10));
                 
            }
           }
            resetTable5Ravindu();
            loadTable5Ravindu();
        
        } catch (Exception ex) {
            System.out.println("table3 mouse clicked   " + ex);
        }
        
    }//GEN-LAST:event_Table3MouseClicked

    private void tbl4_show_itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl4_show_itemsMouseClicked
        // TODO add your handling code here:
        DB db = new DB();
     
     /* ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radio_AM);
        bg1.add(radio_PM);
        */
        
        int i = tbl4_show_items.getSelectedRow();
        String ItemId = (tbl4_show_items.getValueAt(i, 0).toString());
        String ItemName =tbl4_show_items.getValueAt(i, 1).toString();
        
        label_item_id.setText(ItemId);
        label_item_name.setText(ItemName);
   
        
    }//GEN-LAST:event_tbl4_show_itemsMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        String ItemID = label_item_id.getText();
       
       if(ItemID=="0")
        {
            String msg = "Select an item First";
            JOptionPane.showMessageDialog(null,msg );
        }
        else
        {
        insertItemData(); //inserts item data to temp table
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_fn_MMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fn_MMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fn_MMActionPerformed

    private void add_to_items_table5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_to_items_table5MouseClicked
        DB db = new DB();
        
        int i = add_to_items_table5.getSelectedRow();
     //   int jid1 = Integer.parseInt(add_to_items_table5.getValueAt(i, 0).toString());
        
       
        String jid = label_jid2.getText();
        String itemid = (label_item_name.getText()); 
        
//        System.out.println(jid);
//        System.out.println(itemid);
        
      String  sql = "delete from temp_item_tbl where jobID= '"+jid+"' AND ItemID= '"+itemid+"'"; 
      
      try{
      boolean ok2 = db.putData(sql);
        if(ok2)
          System.out.println("data deleted");
        System.out.println(jid);
        System.out.println(itemid);
        
        resetTable5Ravindu();
        loadTable5Ravindu();
      }
      catch(Exception ex)
      {
          System.out.println("check button click of table5;"+ex);
      }  
      
        

// TODO add your handling code here:
     
    }//GEN-LAST:event_add_to_items_table5MouseClicked

    private void add_to_items_table5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_to_items_table5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_add_to_items_table5MouseEntered

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        if((txt_fn_HH.getText().trim().isEmpty())&&(txt_fn_MM.getText().trim().isEmpty())){
                                  String fill="Fill in all the fields to continue";
                                  JOptionPane.showMessageDialog(null,fill);
                                  
        }
        
      else
        {      
        
        
     DB db = new DB();
    try{
        //component var
       
        int jobID = Integer.parseInt(this.label_jid2.getText());
        String des = this.label_jid2.getText();
        int sub_HH = Integer.parseInt(this.txt_fn_HH.getText());
        int sub_MM = Integer.parseInt(this.txt_fn_MM.getText());
        String description = this.des1.getText();
     
        
        String sql_insert1 =  "insert into subjob(jid, sub_des,sub_hh, sub_mm, sub_am_pm)"
         + "values('"+jobID+"','"+des+"','"+sub_HH+"','"+sub_MM+"', '"+getAMOrPM2()+"')";
      
        String sql2= "update final_job_table "
                + "set fin_hh = '"+sub_HH+"',"
                + "fin_mm = '"+sub_MM+"',"
                + "fin_am_pm = '"+getAMOrPM2()+"',"
                + "description = '"+description+"' where jid = '"+jobID+"'";
                
        
        
        boolean isput1 = db.putData(sql_insert1);
        boolean isput2 = db.putData(sql2);
       
        
        if(isput1 && isput2) {
            JOptionPane.showMessageDialog(null, "Job Submitted Successfully");
         
        } else {
        }
    
    }
    catch(Exception ex){
        System.out.println("insertData()" + ex);
    }    
        
 }
        
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if((txt_st_HH.getText().trim().isEmpty())||(txt_st_MM.getText().trim().isEmpty())||(txt_d_HH.getText().trim().isEmpty())||(txt_d_MM.getText().trim().isEmpty())){
                                  String fill="Fill in all the fields to continue";
                                  JOptionPane.showMessageDialog(null,fill);

}
else
        {
	
        setJob();
        resetTable1Ravindu();
        loadTable1Ravindu();
        resetTable2Ravindu();
        loadTable2Ravindu();
        resetTable3Ravindu();
        loadTable3Ravindu();
        resetTable4Ravindu();
        loadTable4Ravindu();
        resetTable();
        loadTable();
        resetTableEmp();
        loadTableEmp();
        
        }
        
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_reg_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_reg_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reg_noActionPerformed

    private void combo_empMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combo_empMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_empMouseClicked

    private void ADD_appintment_txtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADD_appintment_txtMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_ADD_appintment_txtMouseEntered

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        int dialog = JOptionPane.YES_NO_OPTION;
        int result = JOptionPane.showConfirmDialog(null, "Do you want to go 'Home Page'", "Exit",dialog);
        if(result == 0)
        {
            AdminHome home = new AdminHome();//venas karanna main home eke name ekata
            home.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_HomeMouseClicked

    private void signOut_buttonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signOut_buttonMouseMoved
        signOut_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        logUserImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,255)));
        //Info.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
    }//GEN-LAST:event_signOut_buttonMouseMoved

    private void signOut_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signOut_buttonMouseClicked
        //this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //this.setCursor(Cursor.getDefaultCursor());

        MainHome home = new MainHome();
        home.setVisible(true);
        this.dispose();

        //            User_login.setVisible(true);
        //            logUserImg.setVisible(false);
        //            Show_Uname.setVisible(false);
        //            Uname_Separator.setVisible(false);
        //            signOut_button.setVisible(false);
        //            Admin_login_sign1.setVisible(false);
        //            ExpandArrow.setVisible(false);
        //            Other_login_sign.hide();
        //            CollapseArrow.hide();
        //
        //           Admin_menu_panel.setVisible(false);
        //           NonUser_menu_panel.setVisible(true);
        //           Employees_back2.setVisible(false);
        //           User_menu_panel.setVisible(false);
        //           ManageEmployee_subMenu_panel.setVisible(false);
        //           ManageEmployee_subMenu_panel1.setVisible(false);
    }//GEN-LAST:event_signOut_buttonMouseClicked

    private void signOut_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signOut_buttonMouseExited
        signOut_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
    }//GEN-LAST:event_signOut_buttonMouseExited

    private void logUserImgMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logUserImgMouseMoved
        logUserImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 96, 125)));//37,4,70
        signOut_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,255)));
        //  Info.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Details.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Confirm_request.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Report.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //
        //        ADD_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Attend_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        EmpDetail_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Request_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
        //        Report_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37,4,70)));
    }//GEN-LAST:event_logUserImgMouseMoved

    private void logUserImgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logUserImgMouseExited
        logUserImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    }//GEN-LAST:event_logUserImgMouseExited

    private void txt_HHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_HHKeyTyped
         char ch=evt.getKeyChar();
        if(!(Character.isDigit(ch)||ch==KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE))
        {
            getToolkit().beep();
            evt.consume();
        }
        String s=txt_HH.getText();
        if(s.length()>1)
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txt_HHKeyTyped

    private void txt_MMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MMKeyTyped
          char ch=evt.getKeyChar();
        if(!(Character.isDigit(ch)||ch==KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE))  //updated now
        {
            getToolkit().beep();
            evt.consume();
        }
        String s=txt_MM.getText();
        if(s.length()>1)
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txt_MMKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JobManagement_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JobManagement_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JobManagement_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JobManagement_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JobManagement_Admin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADD_appintment_txt;
    private javax.swing.JLabel ADD_appintment_txt1;
    private javax.swing.JLabel Am_Pm;
    private javax.swing.JLabel Anime_sub;
    private javax.swing.JLabel Cancel;
    private javax.swing.JLabel Clock;
    private javax.swing.JTable Customer_Table2;
    private javax.swing.JPanel DetailPanal;
    private javax.swing.JTable Emp_work_tbl;
    private javax.swing.JLabel Home;
    private javax.swing.JLabel Job_assignmet_txt;
    private javax.swing.JLabel Job_assignmet_txt1;
    private javax.swing.JLabel Minimize;
    private javax.swing.JLabel Report_txt1;
    private javax.swing.JLabel Request_txt;
    private javax.swing.JLabel Request_txt1;
    private javax.swing.JLabel Show_Uname;
    private javax.swing.JLabel SubMenu;
    private javax.swing.JPanel SubPanel;
    private javax.swing.JTable Table3;
    private javax.swing.JPanel TimeLine;
    private javax.swing.JPanel TitleBar;
    private javax.swing.JSeparator Uname_Separator;
    private javax.swing.JLabel View_appointment_txt1;
    private javax.swing.JTable add_to_items_table5;
    private javax.swing.JButton btn_appointment_delete;
    private javax.swing.JButton btn_appointment_save;
    private javax.swing.JButton btn_appointment_save1;
    private javax.swing.JComboBox combo_emp;
    private javax.swing.JComboBox combo_job_type;
    private javax.swing.JComboBox combo_vehical_type;
    private javax.swing.JLabel dateLable;
    private com.toedter.calendar.JDateChooser date_date;
    private javax.swing.JTextArea des1;
    private javax.swing.JTable emp_names_tbl;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel label_HH1;
    private javax.swing.JLabel label_MM1;
    private javax.swing.JLabel label_MM2;
    private javax.swing.JLabel label_add_appoitnemt;
    private javax.swing.JLabel label_am_pm_1;
    private javax.swing.JLabel label_date;
    private javax.swing.JLabel label_eid2;
    private javax.swing.JLabel label_item_id;
    private javax.swing.JLabel label_item_name;
    private javax.swing.JLabel label_j_type;
    private javax.swing.JLabel label_jid2;
    private javax.swing.JLabel label_jobId;
    private javax.swing.JLabel label_job_assignment;
    private javax.swing.JLabel label_job_submission;
    private javax.swing.JLabel label_st_AMPM;
    private javax.swing.JLabel label_st_HH;
    private javax.swing.JLabel label_st_MM;
    private javax.swing.JLabel label_v_type;
    private javax.swing.JLayeredPane layer;
    private javax.swing.JLabel lbl_cid;
    private javax.swing.JLabel lbl_contact;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_reg_no1;
    private javax.swing.JLabel leble_job_id;
    private javax.swing.JLabel logUserImg;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel panel_appointment;
    private javax.swing.JPanel panel_job_assignment;
    private javax.swing.JPanel panel_job_submission;
    private javax.swing.JPanel panel_report_generation;
    private javax.swing.JPanel panel_view_appointment;
    private javax.swing.JRadioButton radio_AM;
    private javax.swing.JRadioButton radio_PM;
    private javax.swing.JRadioButton radio_ST_AM;
    private javax.swing.JRadioButton radio_ST_PM;
    private javax.swing.JRadioButton radio_am2;
    private javax.swing.JRadioButton radio_pm2;
    private javax.swing.JLabel signOut_button;
    private javax.swing.JTable tbl4_show_items;
    private javax.swing.JTable tbl_appointments;
    private javax.swing.JTable tbl_avilable_job;
    private javax.swing.JTextField txt_HH;
    private javax.swing.JTextField txt_MM;
    private javax.swing.JTextField txt_d_HH;
    private javax.swing.JTextField txt_d_MM;
    private javax.swing.JTextArea txt_des;
    private javax.swing.JTextField txt_fn_HH;
    private javax.swing.JTextField txt_fn_MM;
    private javax.swing.JTextField txt_reg_no;
    private javax.swing.JTextField txt_st_HH;
    private javax.swing.JTextField txt_st_MM;
    // End of variables declaration//GEN-END:variables

public void updateCus() {



}
    
public void insertData() {
    DB db = new DB();
    try{
        //component var
        int cusID = Integer.parseInt(this.lbl_cid.getText());
        int jobID = Integer.parseInt(this.leble_job_id.getText());
        String CusName = this.lbl_name.getText();
        String cusContact = this.lbl_contact.getText();
        String vehicalType = this.combo_vehical_type.getSelectedItem().toString();
        String regNo = this.txt_reg_no.getText();
        String jobType = this.combo_job_type.getSelectedItem().toString();
        Date date = this.date_date.getDate();
        String hh = this.txt_HH.getText();
        String mm = this.txt_MM.getText();
        String des = this.txt_des.getText();
        
        
       
        
        String sql_insert1 = "insert into customer(CusId, Name, ContactNo)"
         + "values('"+cusID+"','"+CusName+"','"+cusContact+"')";
        
        String sql_insert2 = "insert into job_details(reg_no,v_type, j_type, description, date, s_hh, s_mm, s_am_or_pm)"
         + "values('"+regNo+"','"+vehicalType+"','"+jobType+"','"+des+"', '"+dt.format(date)+"', '"+hh+"', '"+mm+"', '"+getAMOrPM()+"')";
        /*,'"+vehicalType+"','"+jobType+"','"+des+"','"+dt.format(date)+"','"+hh+"','"+mm+"','"+getAMOrPM()+"')";*/
        
      /*  String s1 = "SELECT id FROM cus_details ORDER BY ID DESC LIMIT 1";
        String s2 = "SELECT id FROM job_details ORDER BY ID DESC LIMIT 1";
        ResultSet rs1 = db.getData(s1);
        ResultSet rs2 = db.getData(s2);
        int jid=0, cid=0;
        while(rs1.next()){
            cid = rs1.getInt(1);
        }
        
        while(rs2.next()){
            jid = rs2.getInt(1);
        }  */
        
        String sql = "insert into a (jid,cid)"
                + "values('"+jobID+"', '"+cusID+"')"; 
        
        String sql2= "insert into appoint_tbl(jid, cid, name, contact,reg_no, v_type, j_type, date, s_hh, s_mm, s_am_or_pm)"
         + "values('"+jobID+"','"+cusID+"','"+CusName+"','"+cusContact+"','"+regNo+"','"+vehicalType+"','"+jobType+"','"+dt.format(date)+"', '"+hh+"', '"+mm+"', '"+getAMOrPM()+"')";
                
         String sql3= "insert into final_job_table(jid, cusID, name, contact,reg_no,v_type, job_type, date)"
         + "values('"+jobID+"','"+cusID+"','"+CusName+"','"+cusContact+"','"+regNo+"','"+vehicalType+"','"+jobType+"','"+dt.format(date)+"')";        
        
        
        boolean isput1 = db.putData(sql_insert1);
        boolean isput2 = db.putData(sql_insert2);
        boolean isput3 = db.putData(sql);
        boolean isput4 = db.putData(sql2);
        boolean isput5 = db.putData(sql3);
        
        
        if(isput1 && isput2 && isput3 && isput4 && isput5) {
            JOptionPane.showMessageDialog(null, "Data Entered Successfully!!!");
         
        /* System.out.println(cusID);
        System.out.println(jobID);
        System.out.println(CusName);
        System.out.println(cusContact);
        System.out.println(jobType);
        System.out.println(date);
        System.out.println(hh);
        System.out.println(mm);
        System.out.println(des); */   
            
            
            
        } else {
        }
       
    }
    catch(Exception ex){
        System.out.println("insertData()" + ex);
    }
    
}

public void updateData() { // Update values in the database using the values in the text boxes

    DB db = new DB();
    try{
        int cusID = Integer.parseInt(this.lbl_cid.getText());
        int jobID = Integer.parseInt(this.leble_job_id.getText());
        String CusName = this.lbl_name.getText();
        String cusContact = this.lbl_contact.getText();
        String regNo = this.txt_reg_no.getText();
        String vehicalType = this.combo_vehical_type.getSelectedItem().toString();
        String jobType = this.combo_job_type.getSelectedItem().toString();
        Date date = this.date_date.getDate();
        String hh = this.txt_HH.getText();
        String mm = this.txt_MM.getText();
        String des = this.txt_des.getText();
        
      /*  System.out.println(cusID);
        System.out.println(jobID);
        System.out.println(CusName);
        System.out.println(cusContact);
        System.out.println(jobType);
        System.out.println(date);
        System.out.println(hh);
        System.out.println(mm);
        System.out.println(des);  */
        
        System.out.println("vehical type :"+vehicalType);
        System.out.println("regNo:"+regNo);
        
        
        String sql1 = "update job_details "
              //  + "set cusID = '"+cusID+"',"
                //+ "cus_name = '"+CusName+"',"
               // + "cusContact = '"+cusContact+"',"
                + "set reg_no = '"+regNo+"',"
                + " v_type = '"+vehicalType+"',"
                + "j_type = '"+jobType+"',"
                + "description = '"+des+"',"
                + "date = '"+dt.format(date)+"',"
                + "s_hh = '"+hh+"',"
                + "s_mm = '"+mm+"',"
                + "s_am_or_pm = '"+getAMOrPM()+"' where id = '"+jobID+"'";
        
        String sql2 = "update customer set Name = '"+CusName+"',"
                + "ContactNo = '"+cusContact+"'"               
                //+ "v_type = '"+vehicalType+"',"
                //+ "j_type = '"+jobType+"',"
                //+ "description = '"+des+"',"
                //+ "date = '"+dt.format(date)+"',"
                //+ "hh = '"+hh+"',"
                //+ "mm = '"+mm+"',"
                //+ "am_pm = '"+getAMOrPM()+"'"         
                + " where CusId = '"+cusID+"'";
        
        String sql3 = "update a "
                + "set cid = '"+cusID+"'"
                //+ "cus_name = '"+CusName+"',"
               // + "cusContact = '"+cusContact+"',"
                //+ "v_type = '"+vehicalType+"',"
                //+ "j_type = '"+jobType+"',"
                //+ "description = '"+des+"',"
                //+ "date = '"+dt.format(date)+"',"
                //+ "hh = '"+hh+"',"
                //+ "mm = '"+mm+"',"
                //+ "am_pm = '"+getAMOrPM()+"' "
                + "where jid = '"+jobID+"'";
        
        String sql4 = "update appoint_tbl "
                
                + "set cid = '"+cusID+"',"
                + "name = '"+CusName+"',"
                + "contact = '"+cusContact+"',"
                + "reg_no = '"+regNo+"',"
                + "v_type = '"+vehicalType+"',"
                + "j_type = '"+jobType+"',"
                + "date = '"+dt.format(date)+"',"
                + "s_hh = '"+hh+"',"
                + "s_mm = '"+mm+"',"
                + "s_am_or_pm = '"+getAMOrPM()+"' where jid = '"+jobID+"'"; 
        
        String sql5 = "update final_job_table "
                + "set name = '"+CusName+"',"
                + "contact = '"+cusContact+"',"
                + "reg_no = '"+regNo+"',"
                + "v_type = '"+vehicalType+"',"
                + "job_type = '"+jobType+"',"
                + "date = '"+dt.format(date)+"' where jid = '"+jobID+"'";
          
        
        
        
        boolean isput1 = db.putData(sql1);
        boolean isput2 = db.putData(sql2);
        boolean isput3 = db.putData(sql3);
        boolean isput4 = db.putData(sql4);
        boolean isput5 = db.putData(sql5);
        
        
        if(isput1 && isput2 && isput3 && isput4 && isput5)
             JOptionPane.showMessageDialog(null, "Data updated Successfully!!!");
    }
    catch(Exception ex){
        System.out.println("updateData()  " + ex);
    }
    

}

public void updateData1() { // Update values in the database using the values in the text boxes

    DB db = new DB();
    try{
        int cusID = Integer.parseInt(this.lbl_cid.getText());
        int jobID = Integer.parseInt(this.leble_job_id.getText());
        String CusName = this.lbl_name.getText();
        String cusContact = this.lbl_contact.getText();
        String regNo = this.txt_reg_no.getText();
        String vehicalType = this.combo_vehical_type.getSelectedItem().toString();
        String jobType = this.combo_job_type.getSelectedItem().toString();
        Date date = this.date_date.getDate();
        String hh = this.txt_HH.getText();
        String mm = this.txt_MM.getText();
        String des = this.txt_des.getText();
        
        String sql1 = "update customer set Name = '"+CusName+"',"
                + "ContactNo = '"+cusContact+"'"               
                //+ "v_type = '"+vehicalType+"',"
                //+ "j_type = '"+jobType+"',"
                //+ "description = '"+des+"',"
                //+ "date = '"+dt.format(date)+"',"
                //+ "hh = '"+hh+"',"
                //+ "mm = '"+mm+"',"
                //+ "am_pm = '"+getAMOrPM()+"'"         
                + " where CusId = '"+cusID+"'";
        
        String sql2 = "insert into job_details(id , v_type,reg_no, j_type, description, date, s_hh, s_mm, s_am_or_pm)"
         + "values('"+jobID+"','"+vehicalType+"','"+regNo+"','"+jobType+"','"+des+"', '"+dt.format(date)+"', '"+hh+"', '"+mm+"', '"+getAMOrPM()+"')";
        
        
        String sql3 = "insert into a (jid,cid)"
                + "values('"+jobID+"', '"+cusID+"')";
        
        
        String sql4="insert into appoint_tbl(jid, cid, name, contact, reg_no,v_type, j_type, date, s_hh, s_mm, s_am_or_pm)"
         + "values('"+jobID+"','"+cusID+"','"+CusName+"','"+cusContact+"','"+regNo+"','"+vehicalType+"','"+jobType+"','"+dt.format(date)+"', '"+hh+"', '"+mm+"', '"+getAMOrPM()+"')";
        
        String sql5= "insert into final_job_table(jid, cusID, name, contact,reg_no,v_type, job_type, date)"
         + "values('"+jobID+"','"+cusID+"','"+CusName+"','"+cusContact+"','"+regNo+"','"+vehicalType+"','"+jobType+"','"+dt.format(date)+"')";
        
        boolean isput1 = db.putData(sql1);
        boolean isput2 = db.putData(sql2);
        boolean isput3 = db.putData(sql3);
        boolean isput4 = db.putData(sql4);
        boolean isput5= db.putData(sql5);
        
        if(isput1 && isput2 && isput3 && isput4 && isput5)
             JOptionPane.showMessageDialog(null, "new job Added Successfully!!!");
    }
    catch(Exception ex){
        System.out.println("updateData1()  " + ex);
    }
    

}


public void insertItemData() {
    DB db = new DB();
    try{
        //component var
       //int cusID = Integer.parseInt(this.txt_cus_id.getText());
        int jobID = Integer.parseInt(this.label_jid2.getText());
        String ItemID = this.label_item_id.getText();
        String ItemName= this.label_item_name.getText();
        
       // String njobID = label_jid2.getText();
       // String nItemID = label_item_id.getText();
      //  String nItemName = label_item_name.getText();
                
       // String hh = this.txt_fn_HH.getText();
       // String mm = this.txt_fn_MM.getText();
        
   /*     
        String vehicalType = this.combo_vehical_type.getSelectedItem().toString();
        String jobType = this.combo_job_type.getSelectedItem().toString();
        Date date = this.date_date.getDate(); */
        //System.out.println("Ravindu");
       // System.out.println(njobID);
       // System.out.println(nItemID);
       // System.out.println(nItemName);
        
        
        
       String sql_insert1 = "insert into temp_item_tbl(jobID,itemID,ItemName)"
         + "values('"+jobID+"','"+ItemID+"','"+ItemName+"')";
        
        
        boolean isput1 = db.putData(sql_insert1);
        
       
        
        if(isput1 ) {
            JOptionPane.showMessageDialog(null, ItemName+"added to items");
            resetTable5Ravindu();
            loadTable5Ravindu();
        } else {
        }
       
    }
    catch(Exception ex){
        System.out.println("insertItemData()" + ex);
    }
    
}


public static boolean validateName(String name)
     {
         boolean status = false;
         for(int i = 0; i< name.length(); i++)
         {
             if(Character.isDigit(name.charAt(i)))
                 status = true;
         }
         return status;
     }

public static boolean validateTP(String tel)
{
    boolean charStatus = false;
         for(int i = 0; i< tel.length(); i++)
         {
             if(Character.isAlphabetic(tel.charAt(i)))
                 charStatus = true;

         }
         
         if((tel.length()!=10) || charStatus==true)
             return true;
         
         else
             return false;
}

public static boolean validateTimeLength(String tel)
{
    boolean charStatus = false;
         for(int i = 0; i< tel.length(); i++)
         {
             if(Character.isAlphabetic(tel.charAt(i)))
                 charStatus = true;

         }
         
         if((tel.length()>2) || charStatus==true)
             return true;
         
         else
             return false;
}
         
 public static boolean validateTime1(String time)
{
    boolean charStatus = false;
         for(int i = 0; i< time.length(); i++)
         {
             if(Character.isAlphabetic(time.charAt(i)))
                 charStatus = true;

         }
         
         if((time.length()!=9) || charStatus==true)
             return true;
         
         else
             return false;        
          
}
            


public void display_job_id() {
    DB db = new DB();
    int number = 0;
    
    try{
        String sql = "SELECT * FROM job_details ORDER BY id DESC LIMIT 1";
        ResultSet rs = db.getData(sql);
        while(rs.next()){
            number = rs.getInt(1)+1;
        }
         
        leble_job_id.setText(Integer.toString(number)); 
    }
    catch(Exception ex){
        System.out.println("display_job_id" + ex);
    }
    
}
    
public String getAMOrPM() {
    ButtonGroup bg = new ButtonGroup();
    bg.add(radio_AM);
    bg.add(radio_PM);
    radio_AM.setActionCommand("AM");
    radio_PM.setActionCommand("PM");
   
    
    return bg.getSelection().getActionCommand();
}

public String getAMOrPM1() {
    ButtonGroup bg = new ButtonGroup();
    bg.add(radio_ST_AM);
    bg.add(radio_ST_PM);
    radio_ST_AM.setActionCommand("AM");
    radio_ST_PM.setActionCommand("PM");
   
    
    return bg.getSelection().getActionCommand();
}

public String getAMOrPM2() {
    ButtonGroup bg = new ButtonGroup();
    bg.add(radio_am2);
    bg.add(radio_pm2);
    radio_am2.setActionCommand("AM");
    radio_pm2.setActionCommand("PM");
   
    
    return bg.getSelection().getActionCommand();
}

/*
public String getEmp() {
    ButtonGroup bg = new ButtonGroup();
    bg.add(radio_jagath);
    bg.add(radio_kasun);
    bg.add(radio_nimal);
    bg.add(radio_siril);
    bg.add(radio_sunil);
    bg.add(radio_upali);
    
    radio_jagath.setActionCommand("Jagath");
    radio_kasun.setActionCommand("Kasun");
    radio_nimal.setActionCommand("Nimal");
    radio_siril.setActionCommand("Siril");
    radio_sunil.setActionCommand("Sunil");
    radio_upali.setActionCommand("Upali");
    
    return bg.getSelection().getActionCommand();
}

*/

    
public void loadTable() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)tbl_appointments.getModel();
    //tbl_appointments.setModel(model);
    try{
       String sql1 = "select Distinct * from job_details INNER JOIN a ON job_details.id = a.jid INNER JOIN customer ON  customer.CusId = a.cid ORDER BY job_details.id ASC";
      
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String cid = rs1.getString("customer.CusId");
            String name = rs1.getString("customer.Name");
            String contact= rs1.getString("customer.ContactNo");
            String jid = rs1.getString("job_details.id");
            String regNo = rs1.getString("job_details.reg_no");
            String v_type = rs1.getString("job_details.v_type");
            String j_type = rs1.getString("job_details.j_type");
            String date = rs1.getString("job_details.date");
            String  descr= rs1.getString("job_details.description");
            String s_hh = rs1.getString("job_details.s_hh");
            String s_mm = rs1.getString("job_details.s_mm");
            String ap = rs1.getString("job_details.s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{jid, cid, name,contact,regNo, v_type, date, time});
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTable    " + ex);
    }

}
public void loadTable1Ravindu() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)tbl_avilable_job.getModel();
    //tbl_appointments.setModel(model);
    try{
        
      String sql1 = "select * from appoint_tbl";
       
        
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
         //  String cid = rs1.getString("id");
         //   String name = rs1.getString("name");
         //   String contact= rs1.getString("contact");
            String jid = rs1.getString("jid");
            String v_type = rs1.getString("v_type");
            String j_type = rs1.getString("j_type");
            String date = rs1.getString("date");
            String s_hh = rs1.getString("s_hh");
            String s_mm = rs1.getString("s_mm");
            String ap = rs1.getString("s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;
        
            
            
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{jid,j_type,v_type, date, time});
        }
         
         
     
        
    }catch(Exception ex){
        System.out.println("loadTable1Ravindu    " + ex);
    }
    
    
    
    
    
}

public void loadTable2Ravindu() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)Customer_Table2.getModel();
    //tbl_appointments.setModel(model);
    try{
        
      String sql1 = "select Distinct *  from customer ORDER BY CusId asc";
       
        
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String cid = rs1.getString("CusId");
            String name = rs1.getString("Name");
            String contact= rs1.getString("ContactNo");
        /*  String jid = rs1.getString("id");
            String v_type = rs1.getString("v_type");
            String j_type = rs1.getString("j_type");
            String date = rs1.getString("date");
            String  descr= rs1.getString("description");
            String s_hh = rs1.getString("s_hh");
            String s_mm = rs1.getString("s_mm");
            String ap = rs1.getString("s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;  */
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{cid,name,contact});
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTable2Ravindu    " + ex);
    }   
}


public void loadTable3Ravindu() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)Table3.getModel();
    //tbl_appointments.setModel(model);
    try{
        
      String sql1 = "select Distinct *  from set_job ORDER BY jid asc";
       
        
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String jid = rs1.getString("jid");
            String eid = rs1.getString("eid");
          //  String name = rs1.getString("name");
          //  String contact= rs1.getString("contact");
        /*  String jid = rs1.getString("id");
            String v_type = rs1.getString("v_type");
            String j_type = rs1.getString("j_type");
            String date = rs1.getString("date");
            String  descr= rs1.getString("description");
            String s_hh = rs1.getString("s_hh");
            String s_mm = rs1.getString("s_mm");
            String ap = rs1.getString("s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;  */
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{jid,eid});
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTable3Ravindu    " + ex);
    }   
}

public void loadTable4Ravindu() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)tbl4_show_items.getModel();
    //tbl_appointments.setModel(model);
    try{
        
      String sql1 = "select Distinct *  from item ORDER BY ItemCode asc";
       
        
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String itemid = rs1.getString("ItemCode");
            String name = rs1.getString("CatCode");
          //  String name = rs1.getString("name");
          //  String contact= rs1.getString("contact");
        /*  String jid = rs1.getString("id");
            String v_type = rs1.getString("v_type");
            String j_type = rs1.getString("j_type");
            String date = rs1.getString("date");
            String  descr= rs1.getString("description");
            String s_hh = rs1.getString("s_hh");
            String s_mm = rs1.getString("s_mm");
            String ap = rs1.getString("s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;  */
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{itemid,name});
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTable4Ravindu    " + ex);
    }   
}

public void loadTable5Ravindu() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)add_to_items_table5.getModel();
    //tbl_appointments.setModel(model);
    try{
        
        int jid= Integer.parseInt(label_jid2.getText()) ;
      String sql1 = "select *  from temp_item_tbl where jobID='"+jid+"'";
       
        
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String itemid = rs1.getString("ItemID");
            String name = rs1.getString("ItemName");
          //  String name = rs1.getString("name");
          //  String contact= rs1.getString("contact");
        /*  String jid = rs1.getString("id");
            String v_type = rs1.getString("v_type");
            String j_type = rs1.getString("j_type");
            String date = rs1.getString("date");
            String  descr= rs1.getString("description");
            String s_hh = rs1.getString("s_hh");
            String s_mm = rs1.getString("s_mm");
            String ap = rs1.getString("s_am_or_pm");
            String time = s_hh+":"+s_mm+" "+ap;  */
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{itemid,name});
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTable5Ravindu    " + ex);
    }   
}

public void loadTableEmp() {
    
    
           SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
        String date= sdf1.format(new Date());
    
       DB db = new DB();
    
    DefaultTableModel model =(DefaultTableModel)Emp_work_tbl.getModel();
    //tbl_appointments.setModel(model);
    try{
       // System.out.println(date);
       String sql1 = "select * from final_job_table where date='"+date+"' AND eid is NOT NULL";  
      
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {
        //    String jid = rs1.getString("job_details.id");
       //     String regNo = rs1.getString("job_details.reg_no");
        //    String v_type = rs1.getString("job_details.v_type");
            String jid = rs1.getString("jid");
            String j_type = rs1.getString("job_type");
            String eid = rs1.getString("eid");
            String st_hh = rs1.getString("st_hh");
            String st_mm = rs1.getString("st_mm");
            String st_am_pm=rs1.getString("st_am_pm");
            String fin_hh = rs1.getString("st_mm");
            String fin_mm = rs1.getString("st_mm");
            String fin_am_pm = rs1.getString("fin_am_pm");
            String st_time= (st_hh+":"+st_mm+" "+st_am_pm);
            String fin_time= (fin_hh+":"+fin_mm+" "+fin_am_pm);
          
       /*     
            String sql2 = "select * from emp_details where Emp_ID= '"+eid+"'";
              ResultSet rs2= db.getData(sql2);
            while(rs2.next()){
                 ename= rs2.getString("F_name ");
            }
             System.out.println(ename);        
             System.out.println(jid);        
             System.out.println( j_type);        
             System.out.println( st_time );        
             System.out.println( fin_time );     */   
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{eid,jid, j_type,st_time ,fin_time });
        }
     
        
    }catch(Exception ex){
        System.out.println("loadTableemp    " + ex);
    }
}

public void loadTableEmp_name() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)emp_names_tbl.getModel();
    //tbl_appointments.setModel(model);
    try{
        
        
      String sql1 = "select * from emp_details where Emp_ID is not null";
       
        
        //String sql1 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
 
        ResultSet rs1= db.getData(sql1);
         
         while (rs1.next()) {    
            String eid = rs1.getString("Emp_ID");
            String ename = rs1.getString("F_name");
         
        
    // String sql2 = "select * from cus_details cd, job_details jd, a a where a.jid=jd.id AND a.cid=cd.id AND jd.id='"+jid+"'";
             model.addRow(new Object[]{eid,ename});
         }}
    catch(Exception e)
    {
        System.out.println("loadTableEmp_name" +e);
    }
  }



public void setData() {
    date_date.setDate(new Date());
}

public void setTime() {
    Calendar cal = Calendar.getInstance();
    cal.setTime(new Date());  
    ButtonGroup bg = new ButtonGroup();
    bg.add(radio_AM);
    bg.add(radio_PM);
    int hours = cal.get(Calendar.HOUR);
    int minuts = cal.get(Calendar.MINUTE);
    if(cal.get(Calendar.AM_PM) == Calendar.PM){
        radio_PM.setSelected(true);
        radio_AM.setSelected(false);
    }
    else{
        radio_PM.setSelected(false);
        radio_AM.setSelected(true);
    }
    txt_HH.setText(Integer.toString(hours));
    txt_MM.setText(Integer.toString(minuts));
}
    
public void setClear() {

    display_job_id();
    lbl_cid.setText(null);
    lbl_name.setText(null);
    lbl_contact.setText(null);
    txt_reg_no.setText(null);
    combo_vehical_type.setSelectedIndex(0);
    combo_job_type.setSelectedIndex(0);
    txt_des.setText(null);
    setData();
    setTime();
}

public void resetTable() {
    DefaultTableModel model =(DefaultTableModel)tbl_appointments.getModel();
    model.setRowCount(0);
      
}
public void resetTable2Ravindu() {
    DefaultTableModel model =(DefaultTableModel)Customer_Table2.getModel();
    model.setRowCount(0);
}

public void resetTable1Ravindu() {
    DefaultTableModel model =(DefaultTableModel)tbl_avilable_job.getModel();
    model.setRowCount(0);
}


public void resetTable3Ravindu() {
    DefaultTableModel model =(DefaultTableModel)Table3.getModel();
    model.setRowCount(0);
}

public void resetTable4Ravindu() {
    DefaultTableModel model =(DefaultTableModel)tbl4_show_items.getModel();
    model.setRowCount(0);
}
public void resetTable5Ravindu() {
    DefaultTableModel model =(DefaultTableModel)add_to_items_table5.getModel();
    model.setRowCount(0);
}

public void resetTableEmp() {
    DefaultTableModel model =(DefaultTableModel)Emp_work_tbl.getModel();
    model.setRowCount(0);

}

public void resetTableEmp_name() {
    DefaultTableModel model =(DefaultTableModel)emp_names_tbl.getModel();
    model.setRowCount(0);
}
        
public int timeValidation () {
    int flagh = 0, flagm = 0, flag = 0;//wrong
    if(Integer.parseInt(txt_HH.getText()) < 12 && Integer.parseInt(txt_HH.getText()) >= 0)//right
        flagh = 1;
    
    if(Integer.parseInt(txt_MM.getText()) < 60 && Integer.parseInt(txt_MM.getText()) >= 0) //right
        flagm = 1;
    
    if(flagh == 1 && flagm == 1)
        flag = 1;
    
    return flag;
}

public int timeValidation1() {
    int test1,test2;
    
    test1= Integer.parseInt(txt_st_HH.getText());
    test2= Integer.parseInt(txt_st_HH.getText());
    
    System.out.println(test1);
    System.out.println(test2);
    
    int flagh = 0, flagm = 0, flag = 0;//wrong
    if(Integer.parseInt(txt_st_HH.getText()) < 12 && Integer.parseInt(txt_st_HH.getText()) >= 0)//right
        flagh = 1;
    
    if(Integer.parseInt(txt_st_MM.getText()) < 60 && Integer.parseInt(txt_st_MM.getText()) >= 0) //right
        flagm = 1;
    
    if(flagh == 1 && flagm == 1)
        flag = 1;
    
    return flag;
}

public int timeValidation2() {
    int flagh = 0, flagm = 0, flag = 0;//wrong
    if(Integer.parseInt(txt_d_HH.getText()) < 12 && Integer.parseInt(txt_d_HH.getText()) >= 0)//right
        flagh = 1;
    
    if(Integer.parseInt(txt_d_MM.getText()) < 60 && Integer.parseInt(txt_d_MM.getText()) >= 0) //right
        flagm = 1;
    
    if(flagh == 1 && flagm == 1)
        flag = 1;
    
    return flag;
}
public void dateviolationravindu()           
    {
        date_date.setMinSelectableDate(new Date());
        //jDateChooserefffrom.setMaxSelectableDate(date);

        
    }


private void FillComboRavindu()
    {
        SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
        String date= sdf1.format(new Date());
        
     //   System.out.println(date);
        
        
       DB db = new DB();
        try {
            String sql = "select distinct * from emp_attendance INNER JOIN emp_details on emp_attendance.Emp_ID=emp_details.Emp_ID where emp_attendance.Date= '"+date+"'";
             
            ResultSet rs1= db.getData(sql);
            
            while(rs1.next())
            {
                String name = rs1.getString("emp_details.F_name");

                combo_emp.addItem(name);
            
            
            }
            
        } catch (Exception e) {
            System.out.println("FillComboRavindu Error!! "+e);
        }
    
    
    
}

public void setJob() {
    DB db = new DB();
    DefaultTableModel model =(DefaultTableModel)tbl_avilable_job.getModel();
    
    
    
    try{
        int jid = Integer.parseInt(this.label_jobId.getText());
        //String jlbl = this.label_jobId.getText().toString();
        
       // if(jlbl.equals(""))
        if(jid==0)
        {
          JOptionPane.showMessageDialog(null, "You should First select a jobId");   
        }
        else
        {
            if((txt_st_HH.getText().trim().isEmpty())||(txt_st_MM.getText().trim().isEmpty())||(txt_d_HH.getText().trim().isEmpty())||combo_emp.getSelectedItem().toString()=="select an Employee"){
                                  String fill="Fill in all the fields to continue";
                                  JOptionPane.showMessageDialog(null,fill);
            }  
            else{
                
       //
        String ename = combo_emp.getSelectedItem().toString();
        
        String sql1 = "select Emp_ID from emp_details where F_name = '"+ename+"'";
        ResultSet rs1= db.getData(sql1);
        String eid="0";
        while(rs1.next())
        {
        eid = rs1.getString("Emp_ID");
        }
        
        int st_hh = Integer.parseInt(txt_st_HH.getText());
        int st_mm = Integer.parseInt(txt_st_MM.getText());
                
        int duration_hh = Integer.parseInt(txt_d_HH.getText());
        int duration_mm = Integer.parseInt(txt_d_MM.getText());
        
        int end_hh_in_24 = (st_hh + duration_hh) + (st_mm + duration_mm)/60;
        int end_mm = (st_mm + duration_mm)%60;
        
         int arr[]={0,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,4,5};
        int end_hh= arr[end_hh_in_24];
        
        String e_am_pm="";
        
        if(getAMOrPM1()=="PM")
            e_am_pm="PM";
        else{
           if((getAMOrPM1()=="AM")&&(end_hh_in_24 > 11))
               e_am_pm="PM";
           else
               e_am_pm="AM";
           }
           
        
        
      //  e_am_pm = (end_hh_in_24 > 11) ? "PM" : "AM";
      
        System.out.println("jid-----  " + jid);
     //   System.out.println("vtype-----  "+vtype);
     //   System.out.println("jtype-----  "+jtype);
        System.out.println("eid----   "+eid);
        System.out.println("shh----   " + st_hh);
        System.out.println("smm----   " + st_mm);
        System.out.println("s_ampm----   " + getAMOrPM1());
        System.out.println("dhh----  " + duration_hh);
        System.out.println("dmm----   " + duration_mm);
        System.out.println("end_hh_in_24----   " + end_hh_in_24); 
        System.out.println("endhh----   " + end_hh);
        System.out.println("endmm----   " + end_mm);
        System.out.println("am/pm--   " + e_am_pm);
       
        
        
            JOptionPane.showMessageDialog(null, "Data Entered Successfully!!!");
            
            String sql2="delete from appoint_tbl  where jid='"+jid+"'";
            boolean ok2 = db.putData(sql2);
         
        if(ok2){
       
        String sql = "insert into set_job(jid,eid,actual_st_HH,actual_st_MM,actual_st_ampm,duration_hh, duration_mm,e_hh,e_mm,e_am_pm)"
                + "values('"+jid+"', '"+eid+"','"+st_hh+"','"+st_mm+"','"+getAMOrPM1()+"', '"+duration_hh+"','"+duration_mm+"', '"+end_hh+"', '"+end_mm+"','"+e_am_pm+"')";
       
        String sql4 = "update final_job_table "
                + "set st_hh = '"+st_hh+"',"
                + "st_mm = '"+st_mm+"',"
                + "st_am_pm = '"+getAMOrPM1()+"',"
                + "eid = '"+eid+"' where jid = '"+jid+"'";
       
        
        
        boolean isput = db.putData(sql);
        boolean isput1 = db.putData(sql4);
        }
        else{}
        
        resetTable1Ravindu();
        loadTable1Ravindu();
         resetTableEmp();
        loadTableEmp();
        } 
        }  
    }catch(Exception ex){
        System.out.println("set job error " + ex);
    }
     
}

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("SLogo.png")));
    }
}
    




